<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f4b66728-f533-4cac-9890-08795fa72245" name="Changes" comment="fixed action to run from master">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tests/conftest.py" beforeDir="false" afterPath="$PROJECT_DIR$/tests/conftest.py" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="FastAPI main" />
        <option value="FastAPI test_main" />
        <option value="Python Script" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_BRANCH_BY_REPOSITORY">
      <map>
        <entry key="$PROJECT_DIR$" value="master" />
      </map>
    </option>
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
    <option name="UPDATE_TYPE" value="REBASE" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 8
}</component>
  <component name="ProjectId" id="2wwyNltbdOZvH22tQNSWneFY03k" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "git-widget-placeholder": "master",
    "last_opened_file_path": "C:/Users/ben78/PycharmProjects/nail-salon",
    "node.js.detected.package.eslint": "true",
    "node.js.detected.package.tslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "node.js.selected.package.tslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "two.files.diff.last.used.folder": "C:/Users/ben78/PycharmProjects/nail-salon",
    "vue.rearranger.settings.migration": "true"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="C:\Users\ben78\PycharmProjects\nail-salon" />
      <recent name="C:\Users\ben78\PycharmProjects\nail-salon\app\tests" />
      <recent name="C:\Users\ben78\PycharmProjects\nail-salon\app\schemas" />
      <recent name="C:\Users\ben78\PycharmProjects\nail-salon\app\models" />
      <recent name="C:\Users\ben78\PycharmProjects\nail-salon\app" />
    </key>
  </component>
  <component name="RunManager" selected="Python tests.Python tests for test_services.test_get_service_by_id">
    <configuration name="Python tests for test_services.test_create_service" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="nail-salon" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_services.test_create_service&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_services.test_get_service_by_id" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="nail-salon" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_services.test_get_service_by_id&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_services.test_get_services" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="nail-salon" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_services.test_get_services&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_worker.test_create_worker" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="nail-salon" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_worker.test_create_worker&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <configuration name="Python tests for test_worker.test_get_worker" type="tests" factoryName="Autodetect" temporary="true" nameIsGenerated="true">
      <module name="nail-salon" />
      <option name="INTERPRETER_OPTIONS" value="" />
      <option name="PARENT_ENVS" value="true" />
      <option name="SDK_HOME" value="" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$/tests" />
      <option name="IS_MODULE_SDK" value="true" />
      <option name="ADD_CONTENT_ROOTS" value="true" />
      <option name="ADD_SOURCE_ROOTS" value="true" />
      <EXTENSION ID="PythonCoverageRunConfigurationExtension" runner="coverage.py" />
      <option name="_new_additionalArguments" value="&quot;&quot;" />
      <option name="_new_target" value="&quot;test_worker.test_get_worker&quot;" />
      <option name="_new_targetType" value="&quot;PYTHON&quot;" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Python tests.Python tests for test_services.test_get_service_by_id" />
        <item itemvalue="Python tests.Python tests for test_services.test_get_services" />
        <item itemvalue="Python tests.Python tests for test_services.test_create_service" />
        <item itemvalue="Python tests.Python tests for test_worker.test_create_worker" />
        <item itemvalue="Python tests.Python tests for test_worker.test_get_worker" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="f4b66728-f533-4cac-9890-08795fa72245" name="Changes" comment="" />
      <created>1746966892236</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1746966892236</updated>
      <workItem from="1746966926183" duration="3104000" />
      <workItem from="1746972377093" duration="204000" />
      <workItem from="1746972593730" duration="404000" />
      <workItem from="1747150368724" duration="18901000" />
    </task>
    <task id="LOCAL‎-00001" summary="start-project">
      <option name="closed" value="true" />
      <created>1746968647934</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL‎-00001" />
      <option name="project" value="LOCAL‎" />
      <updated>1746968647934</updated>
    </task>
    <task id="LOCAL‎-00002" summary="start-project">
      <option name="closed" value="true" />
      <created>1746975136234</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL‎-00002" />
      <option name="project" value="LOCAL‎" />
      <updated>1746975136234</updated>
    </task>
    <task id="LOCAL‎-00003" summary="added routes as for v1 of the backend , created tests for the route added connection to the sql-db , added comments and added test.yml file for dynamic test . this is the v1 stable version were all tests have passed in the test env">
      <option name="closed" value="true" />
      <created>1747324664274</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL‎-00003" />
      <option name="project" value="LOCAL‎" />
      <updated>1747324664274</updated>
    </task>
    <task id="LOCAL‎-00004" summary="added routes as for v1 of the backend , created tests for the route added connection to the sql-db , added comments and added test.yml file for dynamic test . this is the v1 stable version were all tests have passed in the test env">
      <option name="closed" value="true" />
      <created>1747325119222</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL‎-00004" />
      <option name="project" value="LOCAL‎" />
      <updated>1747325119222</updated>
    </task>
    <task id="LOCAL‎-00005" summary="fixed action to run from master">
      <option name="closed" value="true" />
      <created>1747326648762</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL‎-00005" />
      <option name="project" value="LOCAL‎" />
      <updated>1747326648762</updated>
    </task>
    <task id="LOCAL‎-00006" summary="fixed action to run from master">
      <option name="closed" value="true" />
      <created>1747326916418</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL‎-00006" />
      <option name="project" value="LOCAL‎" />
      <updated>1747326916418</updated>
    </task>
    <task id="LOCAL‎-00007" summary="fixed action to run from master">
      <option name="closed" value="true" />
      <created>1747328363954</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL‎-00007" />
      <option name="project" value="LOCAL‎" />
      <updated>1747328363954</updated>
    </task>
    <option name="localTasksCounter" value="8" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="start-project" />
    <MESSAGE value="added routes as for v1 of the backend , created tests for the route added connection to the sql-db , added comments and added test.yml file for dynamic test . this is the v1 stable version were all tests have passed in the test env" />
    <MESSAGE value="fixed action to run from master" />
    <option name="LAST_COMMIT_MESSAGE" value="fixed action to run from master" />
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/nail_salon$auth.coverage" NAME="auth Coverage Results" MODIFIED="1747024688390" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/app/routers" />
    <SUITE FILE_PATH="coverage/nail_salon$.coverage" NAME=" Coverage Results" MODIFIED="1747298469383" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/tests" />
    <SUITE FILE_PATH="coverage/nail_salon$main.coverage" NAME="main Coverage Results" MODIFIED="1747024694593" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="coverage.py" COVERAGE_BY_TEST_ENABLED="true" COVERAGE_TRACING_ENABLED="false" WORKING_DIRECTORY="$PROJECT_DIR$/app" />
  </component>
</project>